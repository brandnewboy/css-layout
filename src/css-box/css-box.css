body {
    height: 2090px;
}
/*
定位里面的z-index属性, 如果父元素也是定位的，优先会继承父级的z-index属性
*/
.header {
    height: 50px;
    width: 100%;
    /*background-color: aliceblue;*/
    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.1),
    0 1px 5px 0 rgba(0, 0, 0, 0.1);
    position: sticky;
    /*top: 0;*/
    top: 0;
}

.user-tip {
    width: 70px;
    height: 70px;
    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.1), 0 1px 5px 0 rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    /*
    sticky定位表示：
    根据bottom、top、left、right属性值会指定一个区域
    当元素在该区域内时，元素会正常以相对定位显示跟随滚动条滚动
    当滚动使得元素即将超出该区域时，元素会马上粘在该区域边缘不滚出去 如下面的top: 50vh;
    若一开始元素就超出该区域，元素会直接粘在该区域边缘 如下面的left: 90vw;
    */
    position: sticky;
    top: 50vh;
    left: 90vw;
    cursor: pointer;
    text-align: center;
    line-height: 70px;
}

.box1 {
    /*width: 200px;*/
    /*height: 200px;*/
    border: 1px solid black;
    background-color: pink;
}

.box1::after {
    content: "";
    display: block;
    clear: both;
}

.box2 {
    width: 80px;
    height: 80px;
    background-color: burlywood;
    color: red;
    float: left;
}

.box3 {
    /*width: 80px;*/
    /*height: 80px;*/
    background-color: rgba(0,0,0, 0.2);
    position: absolute;
    bottom: 0;
    right: 0;
}

.box4 {
    width: 100px;
    height: 100px;
    background-color: pink;
}

.parent{
    position: relative;
    z-index: 3;
}

.inner {
    width: 100px;
    height: 100px;
    background-color: aqua;
    position: absolute;
    z-index: 1;
}
.outer {
    width: 100px;
    height: 100px;
    background-color: #ea3465;
    position: absolute;
    left: 50px;
    top: 50px;
    z-index: 2;
}